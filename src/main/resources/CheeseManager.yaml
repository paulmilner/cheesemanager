openapi: 3.0.1
info:
  title: Cheese Manager
  description: Cheese Manager service.
    Note that the created/updated timestamps will be ignored if sent to the server, these will only be set and returned by the server.
  version: 1.0.0
servers:
- url: https://localhost:8080/
security:
- DNHeader: []
tags:
- name: Cheese
  description: Cheeses of the world
paths:
  /cheese:
    get:
      summary: Get all existing cheeses
      operationId: getCheeses
      responses:
        200:
          description: Items returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cheeses'
        404:
          description: Cheeses not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Add a new Cheese
      operationId: addCheese
      requestBody:
        description: Cheese object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cheese'
              type: object
        required: true
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cheese'
        405:
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      x-codegen-request-body-name: body
    delete:
      summary: Delete all existing Cheeses
      description: We may not want to actually support this operation - included for
        completeness
      operationId: deleteCheeses
      responses:
        200:
          description: Items deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cheeses'
        404:
          description: Cheeses not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /cheese/{id}:
    get:
      summary: Get an existing Cheese
      operationId: getCheese
      parameters:
      - name: id
        in: path
        description: id of Cheese
        required: true
        schema:
          type: string
      responses:
        200:
          description: Item returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cheese'
        400:
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Cheese not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update an existing Cheese
      operationId: updateCheese
      requestBody:
        description: Cheese object that needs to be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cheese'
              type: object
        required: true
      parameters:
      - name: id
        in: path
        description: id of Cheese
        required: true
        schema:
          type: string
      responses:
        200:
          description: Item returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cheese'
        400:
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Cheese not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete an existing Cheese
      operationId: deleteCheese
      parameters:
      - name: id
        in: path
        description: id of Cheese
        required: true
        schema:
          type: string
      responses:
        400:
          description: Invalid ID supplied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: Cheese not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        405:
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Cheese:
      required:
      - name
      - description
      - strength
      type: object
      properties:
        id:
          type: string
          description: database ID - will be ignored if specified on creation
        name:
          type: string
        description:
          type: string
        strength:
          type: string
          enum:
          - mild
          - medium
          - strong
          x-enum-varnames:
          - mild
          - medium
          - strong
        created:
          type: string
          description: UTC datetime as a string
        updated:
          type: string
          description: UTC datetime as a string
        by:
          type: string
          description: Userid who created/last updated this item - returned by server, will be ignored if given on create/update.
    Cheeses:
      type: array
      items:
        $ref: '#/components/schemas/Cheese'
    
    Error:
      type: object
      properties:
        code: 
          type: string
        message: 
          type: string
        additionalData: 
          type: string
  securitySchemes:
    DNHeader:
      type: apiKey
      name: dn
      in: header